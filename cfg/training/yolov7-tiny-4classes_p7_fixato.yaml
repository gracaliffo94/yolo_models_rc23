# parameters
nc: 4  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, Conv, [8, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 0-P1/2 0

   [-1, 1, Conv, [8, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 1
   [[-1, -2], 1, Concat, [1]],# 2
   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 3

   [-1, 1, MP, []],  # 8-P3/8# 4
   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # 5
   [[-1, -2], 1, Concat, [1]], # 6
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 14 ---> 7

   [-1, 1, MP, []],  # 15-P4/16 # 8
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]], #9
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 10
   [[-1, -2], 1, Concat, [1]], # 11
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 21  ----> 14  ---> 13   -->12

   [-1, 1, MP, []],  # 22-P5/32 13
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]], #14
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]], #15
   [[-1, -2], 1, Concat, [1]], #16
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 28  ---> 21  ---> 19 ---> 17
  ]
# 20 entries per backbone
# yolov7-tiny head
head:
  [[-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]], #18
   [-1, 1, SP, [5]], # 19
   [-2, 1, SP, [9]],# 20
   [-3, 1, SP, [13]], # 21
   [[-1, -2, -3], 1, Concat, [1]],# 22
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],# 23
   [[-1, -6], 1, Concat, [1]],# 24
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 37 --> 36  ----> 29  --->27 --> 25

   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # 26
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],# 27
   [12, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P4   il 21 diventa ----> 14  ---> 13-->12 # 28
   [[-1, -2], 1, Concat, [1]], # 29

   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # 30
   [-1, 1, Conv, [16, 3, 1, None, 1, nn.LeakyReLU(0.1)]], # 31
   [[-1, -2], 1, Concat, [1]], # 32
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 47 --> 45  ---> 38  ---> 35 --> 33

   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # 34
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 35è
   [7, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P3  il 14 è divnetato 7 # 36
   [[-1, -2], 1, Concat, [1]], # 37

   [-1, 1, Conv, [8, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  #40 # 38
   [-1, 1, Conv, [8, 3, 1, None, 1, nn.LeakyReLU(0.1)]], # 41 39
   [[-1, -2], 1, Concat, [1]], #42 40
   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 54 #44 43 41

   [-1, 1, Conv, [32, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  #45 44 42
   [[-1, 33], 1, Concat, [1]],   # 45  è diventato 38 poi 35  46 45 43

   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  #47 46 44
   [-1, 1, Conv, [16, 3, 1, None, 1, nn.LeakyReLU(0.1)]], # 47 45
   [[-1, -2], 1, Concat, [1]], # 48 46
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 61  --> 58 # 49 47

   [-1, 1, Conv, [64, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  #50 48
   [[-1, 25], 1, Concat, [1]],  # 36 è diventato 29 poi 27  #51 49

   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  #52 50
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]], # 53 51
   [[-1, -2], 1, Concat, [1]],# 54 52
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 69  ---> 62  57 --> 55 53
      
   [41, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 54 ---> 47  58 54
   [47, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 61 ---> 54  59 55
   [53, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 69 ---> 62  #60 56

   [[54,55,56], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)  #61 57
  ]  # 42 per head

#20 + 42 = 62 totali quindi torna tutto, ultimo ha indice 61
